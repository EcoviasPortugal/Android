package com.example.ecoviasdeportugal;

import android.location.Criteria;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.Bundle;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.view.Menu;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.TextView;

public class MainActivityJAVA extends Activity implements LocationListener {
	
	private LocationManager locationManager; //acede aos serviços de localização do android\
	private TextView latitude; //variável para colocar a latitude
	private TextView longitude; //variável para colocar a longitude
	private String provider;

    @Override
    protected void onCreate(Bundle savedInstanceState) { // primeiro método que é SEMPRE chamado. Aproveita-se para inicializar variáveis. Neste caso temos 3: locationamanager, latitude e longitude
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main_xml); //faz o inflate do layout sobre a avtivity
        locationManager = (LocationManager) getSystemService (Context.LOCATION_SERVICE); // se tiver, dá a ultima coordenada conhecida de um fornencer do serviço de GPS
        latitude = (TextView) findViewById (R.id.latitudevalor); //permite aceder Às propriedades do objecto textview latitudevalor e alterálas para mostrar outro valor
        longitude = (TextView) findViewById (R.id.longitudevalor); //permite aceder Às propriedades do objecto textview latitudevalor e alterálas para mostrar outro valor
        provider = LocationManager.GPS_PROVIDER;
        
        Button botao = (Button) findViewById (R.id.botaolocalizacao);
        botao.setOnClickListener(new OnClickListener() {
        	public void onClick (View vista) {
        		if(locationManager.isProviderEnabled(provider)) {
        			onLocationChanged(locationManager.getLastKnownLocation(provider));
        		}
        		
        		else {
        			latitude.setText (getString (R.string.sem_valor)); //coloca a textview da varia´vel latitude igual à string da variável sem_valor
        			longitude.setText (getString (R.string.sem_valor));
        		}
        	}
        }
        
        		); 
        
        Button botao2 = (Button) findViewById (R.id.vermapa);
        botao2.setOnClickListener(new OnClickListener() {
        	public void onClick (View vista) {
        		
        		double latitudePorDefeito = -9.00d; //valores por defeito se o GPS nao devolver nada
        		double longitudePorDefeito = 38.00d;
        		Intent intencao = new Intent (MainActivityJAVA.this,Mapa.class);
        		
        			
        		if (latitude.getText().equals(getString (R.string.sem_valor))) { // se a latitude nao tiver valor, não executa o intent
        			intencao.putExtra("longitudemapa", longitudePorDefeito);
            		intencao.putExtra("latitudemapa", latitudePorDefeito);
            		}
        		
        		else {     			
        			            		
            		intencao.putExtra("longitudemapa", longitude.getText());
            		intencao.putExtra("latitudemapa", latitude.getText());
            		            		
        		}
        		startActivity(intencao); //inicia a actividade do mapa por cima da outra que esteja a correr (localização), sem a destruir, voltando a ela quando esta termina.
        		
        			
        		
        		
        	}
        }
        
        		); 
        
        
        
        
    }


    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main_activity_jav, menu);
        return true;
           
        
        
    }


    @Override
    protected void onResume() { //sempre que a nossa ativity ficar "em cima" o android executa a consulta ao fornecer de dados gps
    	super.onResume();
    	  	if(locationManager.isProviderEnabled(provider))
    		locationManager.requestLocationUpdates(provider, 1000, 1, this); // Se o provider fornecer dados, a cada segundo ou a cada metro ele vai ler uma coordenada de localização ao fornecedor
    	 	 	
    	
    }
    
    @Override
    protected void onDestroy () { //quanda fecha a app deixa de receber dados do GPS
    	super.onDestroy ();
    	locationManager.removeUpdates (this); // this é a própria class onde nós estamos, o locationListener, que queremos fechar
    }
    
    
	@Override
	public void onLocationChanged(Location localizacao) { //possivel localização. Depois temos de a ir buscar ao fornecedor
		// TODO Auto-generated method stub
		
		if (localizacao == null) {
			latitude.setText ("desorientado"); //coloca a string da textview da variável latitude igual à string da variável sem_valor
			longitude.setText (getString (R.string.sem_valor));
						 
		}
		else
			
		{
			latitude.setText (String.valueOf(localizacao.getLatitude())); // A classe String tem o mátodo valueOf que converte o par|ametro latitude de location em string, dado que a variável latitude só recebe strings pois é do tipo string
			longitude.setText((String.valueOf(localizacao.getLongitude())));
			
			
			
		}
		
	}


	@Override
	public void onProviderDisabled(String arg0) {
		// TODO Auto-generated method stub
		
	}


	@Override
	public void onProviderEnabled(String arg0) {
		// TODO Auto-generated method stub
		
	}


	@Override
	public void onStatusChanged(String arg0, int arg1, Bundle arg2) {
		// TODO Auto-generated method stub
		
	}
    
}
